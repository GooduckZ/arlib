name: Arlib CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly run on Sundays

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-latest]
        python-version: [3.8, 3.9, '3.10', '3.11']
        exclude:
          - os: macos-latest
            python-version: 3.8

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgmp-dev \
          swig \
          cmake \
          autoconf \
          gperf \
          libboost-all-dev \
          build-essential \
          default-jre \
          zip \
          ninja-build

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install \
          gmp \
          swig \
          cmake \
          autoconf \
          gperf \
          boost \
          ninja
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install pytest pytest-cov
        python -m pip install -r requirements.txt
        python -m pip install -e .
    
    - name: Download solvers
      run: |
        cd bin_solvers
        python download.py
        chmod +x cvc5 z3 mathsat
        cd ..
    
    - name: Run tests
      run: bash unit_test.sh --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  docs:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install -e .
        python -m pip install -r docs/requirements.txt
    
    - name: Build documentation
      run: |
        cd docs && make html
    
    - name: Deploy documentation to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/build/html 